/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Frame.java to edit this template
 */
package practica5pdc;

import static java.lang.Thread.sleep;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author rafaa
 */
public class ClinicaAPP extends java.awt.Frame {

    /**
     * Creates new form ClinicaAPP
     */
    public ClinicaAPP() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        final int ancho = 800;
        final int alto = 636;
        ClinicaAPP clinica = new ClinicaAPP();
        clinica.setSize(ancho,alto);
        CanvasClinica cv = new CanvasClinica(ancho,alto);
        
        Centro centro = new Centro();
        Thread[] clientes = new Thread[1000];
        Random rdm = new Random();
        
        clinica.add(cv);
        clinica.setVisible(true);

        for (int i = 0; i < 20; i++) {

            if (rdm.nextInt(100) < 40) {
                clientes[i] = new Thread(new Rehabilita(centro, "R-" + i,cv));
                clientes[i].start();
            } else {
                clientes[i] = new Masaje(centro, "M-" + i,cv);
                clientes[i].start();
            }
            try {
                sleep(rdm.nextInt(1, 3) * 1000);
            } catch (InterruptedException ex) {
                Logger.getLogger(Generador.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        for (int i = 0; i < 20; i++) {
            try {
                clientes[i].join();
            } catch (InterruptedException ex) {
                System.out.println("No se pudo hacer el join");
            }
        }
        for (int i = 0; i < 20; i++) {
            try {
                clientes[i].join();
            } catch (InterruptedException ex) {
                System.out.println("No se pudo hacer el join");
            }
        }
        System.exit(0);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
