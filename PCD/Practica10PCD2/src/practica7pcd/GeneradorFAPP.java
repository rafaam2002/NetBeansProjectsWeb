/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Frame.java to edit this template
 */
package practica7pcd;

import static java.lang.Thread.sleep;
import java.util.Random;
import org.jcsp.lang.Any2OneChannel;
import org.jcsp.lang.Channel;
import org.jcsp.lang.One2OneChannel;
import org.jcsp.util.Buffer;

/**
 *
 * @author rafaa
 */
public class GeneradorFAPP extends java.awt.Frame {

    /**
     * Creates new form GeneradorFAPP
     */
    public GeneradorFAPP() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    /**
     * @param args the command line arguments
     * @throws java.lang.InterruptedException
     */
    public static void main(String args[]) throws InterruptedException {
        var gen = new GeneradorFAPP();
        gen.setSize(900, 700);
        var cv = new CanvasComedero(900, 700);
        gen.add(cv);
        gen.setVisible(true);
        int N = 20;

        Any2OneChannel entraGato = Channel.any2one(new Buffer(20));
//        One2OneChannel permiso[] = Channel.one2oneArray(N, new Buffer(1));

        Any2OneChannel entraPerro = Channel.any2one(new Buffer(20));
        Any2OneChannel salePerro = Channel.any2one(new Buffer(20));
        Any2OneChannel saleGato = Channel.any2one(new Buffer(20));
        
        One2OneChannel permiso[] = new One2OneChannel[N];
        for (int i = 0; i < N; i++) {
            permiso[i] = Channel.one2one(new Buffer(1));
        }
        

        Thread[] animales = new Thread[20];
        Random rdm = new Random(4321);
        Comedero c = new Comedero(entraPerro, entraGato, salePerro, saleGato, permiso);
        c.start();

        for (int i = 0; i <N; i++) {
            if (rdm.nextInt(100) < 50) {
                animales[i] = new Perro(entraPerro, salePerro, permiso[i], cv, i);
            } else {
                animales[i] = new Thread(new Gato(entraGato,saleGato,permiso[i], cv, i ));
            }
            animales[i].start();
            try {
                sleep(rdm.nextInt(1, 3) * 500);
            } catch (InterruptedException ex) {
                System.out.println("No se pudo hacer el sleep");
            }
        }
        for (int i = 0; i < 20; i++) {
            try {
                animales[i].join();
            } catch (InterruptedException ex) {
                System.out.println("No se pudo hacer el join");
            }
        }
        System.exit(0);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
